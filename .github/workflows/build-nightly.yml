name: LiTRE Build 
 
on: [push]
 
env:
  SOLUTION_FILE_PATH: DS_Map.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}} 
    
    - name: Zip Release Files
      run: Compress-Archive ${{env.GITHUB_WORKSPACE}}DS_Map\bin\Release ${{env.GITHUB_WORKSPACE}}\release.zip

    - name: Upload Release Artifact
      uses: actions/upload-artifact@v3
      with:
        name: release-artifact
        path: ${{env.GITHUB_WORKSPACE}}DS_Map\bin\Release

    - name: Generate Git Tag
      id: generate_tag
      run: |
        VERSION_PREFIX="v"
        VERSION_MAJOR_MINOR="1.0"
        VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$')
        if [ -z "$VERSION_PATCH" ]; then
          VERSION_PATCH=0
        else
          VERSION_PATCH=$((VERSION_PATCH + 1))
        fi
        NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
        echo "Generated new tag: $NEW_TAG"
        echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
    - name: Push Git Tag
      run: |
        git config user.name "GitHub Actions"
        git config user.email "github-actions@users.noreply.github.com"
        git tag $NEW_TAG
        git push origin $NEW_TAG

    - name: Create release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $NEW_TAG
        release_name: Release ${{ github.ref }}
        prerelease: true

    - name: Upload File to Release
      run: gh release upload $NEW_TAG ${{env.GITHUB_WORKSPACE}}DS_Map\bin\Release

          