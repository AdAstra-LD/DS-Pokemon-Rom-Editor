name: DSPRE Beta Canary Build

on:
  push:
    branches:
      - main  # Trigger only on pushes to the main branch

permissions:
  contents: write

env:
  SOLUTION_FILE_PATH: DS_Map.sln
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build DSPRE
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}
    
    - name: Zip Release Files
      run: Compress-Archive -Path ${{env.GITHUB_WORKSPACE}}DS_Map\bin\Release -DestinationPath DSPRE-beta-canary.zip

    - name: Fetch tags
      run: git fetch --prune --unshallow --tags

    - name: Get latest tag and increment
      id: increment_tag
      run: |
        # Get the latest tag or use default
        last_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "beta_canary.0")
        base_tag="${last_tag%.*}"
        version_number="${last_tag##*.}"
        new_tag="${base_tag}.$((version_number + 1))"
        echo "new_tag=$new_tag" >> $GITHUB_ENV
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete previous release
      run: |
        existing_release_id=$(gh release list --tag ${{ env.new_tag }} --json id --jq '.[0].id')
        if [ -n "$existing_release_id" ]; then
          gh release delete --yes ${{ env.new_tag }}
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create new release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.new_tag }}
        name: DSPRE Beta Canary Build ${{ env.new_tag }}
        files: DSPRE-beta-canary.zip
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        generate_release_notes: true
